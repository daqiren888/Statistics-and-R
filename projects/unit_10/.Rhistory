imp <- preProcess(sdat, method = c("bagImpute"), k = 5)
sdat <- predict(imp, sdat)
transformed <- spatialSign(sdat)
transformed <- as.data.frame(transformed)
par(mfrow = c(1, 2), oma = c(2, 2, 2, 2))
plot(general_votes ~ ttl_disb, data = sdat, col = "blue", main = "Before")
plot(general_votes ~ ttl_disb, data = transformed, col = "blue", main = "After")
d2$novotes<-transformed$"general_votes"
d2$nodisb<-transformed$"ttl_disb"
d2$noparty<-transformed$"can_party"
#d2<-transformed
trans <- preProcess(d2, method = c("center", "scale"))
# use predict() function to get the final result
d3 <- predict(trans, d2)
d2$csvotes = d3$general_votes
d2$csdisb = d3$ttl_disb
d2$csparty = d3$can_party
d2$logdisb <- log(d2$ttl_disb)
d2$logvotes <- log(d2$general_votes)
d2$logparty <- log(d2$can_party)
d2 <- na.omit(d2)
d2[d2 == -Inf] <- 0
fit0 <- lm(d2$general_votes ~ d2$ttl_disb  + d2$can_party)
summary(fit0)
fit1 <- lm(d2$csvotes ~ d2$csdisb  + d2$csparty)
summary(fit1)
fit2 <- lm(d2$novotes ~ d2$nodisb  + d2$noparty)
summary(fit2)
fit3 <- lm(d2$logvotes ~ d2$logdisb  + d2$logparty)
summary(fit3)
fit4 <- lm(d2$general_votes ~ d2$logdisb + d2$can_party)
summary(fit4)
library(MASS)
b <- boxcox(logvotes ~ logdisb + logparty, data = d2)
lambda <- b$x
lik <-b$y
bc<-cbind(lambda, lik)
bc[order(~lik),]
lambda<- 2.4
d2$lamvotes <- (d2$logvotes^lambda-1)/lambda
m1<-lm(lamvotes ~ logdisb + logparty, data = d2)
summary(m1)
b2 <- boxcox(novotes ~ nodisb + noparty, data = d2)
lambda <- b2$x
lik <-b2$y
bc<-cbind(lambda, lik)
bc[order(~lik),]
lambda<- 1
d2$lam2votes <- (d2$novotes^lambda-1)/lambda
m2<-lm(lam2votes ~ nodisb + noparty, data = d2)
summary(m2)
attach(d2)
c1 <- lm(logvotes ~  logdisb + logparty)
summary(c1)
e <- resid(c1)
c2 <- lm(e^2 ~ logdisb + logparty + I(logdisb^2) + I(logparty^2) + I(logdisb*logparty))
R2 <- summary(c2)$r.sq
n <- nrow(c2$model)
m <- ncol(c2$model)
W <- n*R2
P <- 1 - pchisq(W, m - 1)
c3 <- lm(logvotes ~  logdisb + logparty, weights = 1/abs(e))
summary(c3)
attach(d2)
c1 <- rlm(logvotes ~  logdisb + logparty)
summary(c1)
e <- resid(c1)
c2 <- rlm(e^2 ~ logdisb + logparty + I(logdisb^2) + I(logparty^2) + I(logdisb*logparty))
attach(d2)
c1 <- lm(logvotes ~  logdisb + logparty)
summary(c1)
e <- resid(c1)
c2 <- lm(e^2 ~ logdisb + logparty + I(logdisb^2) + I(logparty^2) + I(logdisb*logparty))
R2 <- summary(c2)$r.sq
n <- nrow(c2$model)
m <- ncol(c2$model)
W <- n*R2
P <- 1 - pchisq(W, m - 1)
c3 <- lm(logvotes ~  logdisb + logparty, weights = 1/abs(e))
summary(c3)
attach(d2)
c1 <- lm(logvotes ~  logdisb + logparty)
summary(c1)
e <- resid(c1)
c2 <- lm(e^2 ~ logdisb + logparty + I(logdisb^2) + I(logparty^2) + I(logdisb*logparty))
R2 <- summary(c2)$r.sq
n <- nrow(c2$model)
m <- ncol(c2$model)
W <- n*R2
P <- 1 - pchisq(W, m - 1)
c3 <- lm(logvotes ~  logdisb + logparty, weights = 1/abs(e))
summary(c3)
## install.packages('fec16')
library(tidyverse)
library(magrittr)
library(ggplot2)
library(patchwork)
library(sandwich)
library(lmtest)
library(fec16)
library(scales)
library(compare)
library(dplyr)
library(gvlma)
library(caret)
library(e1071)
library(car)
library(ggpubr)
library(cowplot)
library(gridExtra)
theme_set(theme_minimal())
knitr::opts_chunk$set(dpi = 300)
candidates    <- fec16::candidates
results_house <- fec16::results_house
campaigns     <- fec16::campaigns
write.csv(candidates, "c.csv")
write.csv(results_house, "r.csv")
write.csv(campaigns, "ca.csv")
summary(candidates)
summary(results_house)
summary(campaigns)
p1<-ggplot(results_house, aes(x= general_votes)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")
p2<-ggplot(campaigns, aes(x= ttl_disb)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")
p3<-ggplot(results_house,aes(x= general_votes)) +
geom_density() +
scale_x_continuous(breaks = trans_breaks("log", function(x) 10^x), trans = scales::log_trans())+
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")+
labs(x = "log(general_votes)")
p4<-ggplot(campaigns, aes(x= ttl_disb)) +
geom_density() +
scale_x_continuous(breaks = trans_breaks("log", function(x) 10^x), trans = scales::log_trans())+
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")+
labs(x = "log(ttl_disb)")
ggarrange(p1, p2, p3, p4, labels = c("A", "B", "C", "D"), ncol = 2, nrow = 2)
d1 <- dplyr::inner_join(results_house, campaigns, by = NULL)
nrow(d1)
summary(d1)
p5 <- ggplot(d1, aes(y=general_votes, x=ttl_disb)) +
geom_point(size=2, shape=23)+
geom_smooth(method=lm)
p6 <- ggplot(d1, aes(x=log(ttl_disb), y=log(general_votes))) +
geom_point(size=2, shape=23)+
geom_smooth(method=lm)
ggarrange(p5, p6, labels = c("E", "F"), ncol = 2, nrow = 2)
d2<-d1 %>%
dplyr::select(party, general_votes, ttl_disb) %>%
na.omit() %>%
mutate(
can_party = case_when(
party=="REP" ~ "REP",
party=="DEM" ~ "DEM",
TRUE ~ "Other"
)
)
d2<-d2 %>% dplyr::select(can_party, general_votes, ttl_disb)
summary(d2)
p0 <- ggplot(d2, aes(y = general_votes, x=ttl_disb, color=can_party)) +
geom_smooth(method=lm)+
geom_point(size=2, shape=23)
p1<-ggplot(d2, aes(x=general_votes, y=ttl_disb, color=can_party)) +
geom_point() +
scale_color_manual(values = c("red", "blue", "green")) +
theme(legend.position=c(1,1), legend.justification=c(1,1))
p2<-ggplot(d2, aes(x=general_votes, fill=can_party)) +
geom_density(alpha=.5) +
scale_fill_manual(values =  c("red", "blue", "green")) +
theme(legend.position=c(1,1), legend.justification=c(1,1))
# Marginal density plot of y (right panel)
p3<-ggplot(d2, aes(x=ttl_disb, fill=can_party)) +
geom_density(alpha=.5) +
scale_fill_manual(values =  c("red", "blue", "green")) +
theme(legend.position = "none")
p4<-ggplot(d2, aes(x=can_party, fill=can_party)) +
geom_density(alpha=.5) +
scale_fill_manual(values =  c("red", "blue", "green")) +
theme(legend.position = "none")
ggarrange(p1, p2, p3, p4, labels = c("G", "H", "I", "J" ), ncol = 2, nrow =2)
d5<-d2 %>%
dplyr::select(can_party, general_votes, ttl_disb) %>%
na.omit() %>%
mutate(
can_party = case_when(
can_party=="REP" ~ 0,
can_party=="DEM" ~ 1,
TRUE ~ 2
)
)
d2<-d5 %>% dplyr::select(can_party, general_votes, ttl_disb)
d2[d2 == -Inf] <- 0
sdat <- d2[, c("general_votes", "ttl_disb", "can_party")]
imp <- preProcess(sdat, method = c("bagImpute"), k = 5)
sdat <- predict(imp, sdat)
transformed <- spatialSign(sdat)
transformed <- as.data.frame(transformed)
par(mfrow = c(1, 2), oma = c(2, 2, 2, 2))
plot(general_votes ~ ttl_disb, data = sdat, col = "blue", main = "Before")
plot(general_votes ~ ttl_disb, data = transformed, col = "blue", main = "After")
d2$novotes<-transformed$"general_votes"
d2$nodisb<-transformed$"ttl_disb"
d2$noparty<-transformed$"can_party"
#d2<-transformed
trans <- preProcess(d2, method = c("center", "scale"))
# use predict() function to get the final result
d3 <- predict(trans, d2)
d2$csvotes = d3$general_votes
d2$csdisb = d3$ttl_disb
d2$csparty = d3$can_party
d2$logdisb <- log(d2$ttl_disb)
d2$logvotes <- log(d2$general_votes)
d2$logparty <- log(d2$can_party)
d2 <- na.omit(d2)
d2[d2 == -Inf] <- 0
fit0 <- lm(d2$general_votes ~ d2$ttl_disb  + d2$can_party)
summary(fit0)
fit1 <- lm(d2$csvotes ~ d2$csdisb  + d2$csparty)
summary(fit1)
fit2 <- lm(d2$novotes ~ d2$nodisb  + d2$noparty)
summary(fit2)
fit3 <- lm(d2$logvotes ~ d2$logdisb  + d2$logparty)
summary(fit3)
fit4 <- lm(d2$general_votes ~ d2$logdisb + d2$can_party)
summary(fit4)
attach(d2)
c1 <- lm(logvotes ~ logdisb + logparty)
summary(c1)
e <- resid(c1)
c2 <- lm(e^2 ~ logdisb + logparty + I(logdisb^2) + I(logparty^2) + I(logdisb*logparty))
R2 <- summary(c2)$r.sq
n <- nrow(c2$model)
m <- ncol(c2$model)
W <- n*R2
P <- 1 - pchisq(W, m - 1)
c3 <- lm(logvotes ~  logdisb + logparty, weights = 1/abs(e))
summary(c3)
attach(d2)
c1 <- lm(logvotes ~ logdisb + logparty)
summary(c1)
e <- resid(c1)
c2 <- lm(e^2 ~ logdisb + logparty + I(logdisb^2) + I(logparty^2) + I(logdisb*logparty))
R2 <- summary(c2)$r.sq
n <- nrow(c2$model)
m <- ncol(c2$model)
W <- n*R2
P <- 1 - pchisq(W, m - 1)
c3 <- lm(logvotes ~  logdisb + logparty, weights = 1/abs(e))
summary(c3)
## install.packages('fec16')
library(tidyverse)
library(magrittr)
library(ggplot2)
library(patchwork)
library(sandwich)
library(lmtest)
library(fec16)
library(scales)
library(compare)
library(dplyr)
library(gvlma)
library(caret)
library(e1071)
theme_set(theme_minimal())
knitr::opts_chunk$set(dpi = 300)
candidates    <- fec16::candidates
results_house <- fec16::results_house
campaigns     <- fec16::campaigns
write.csv(candidates, "c.csv")
write.csv(results_house, "r.csv")
write.csv(campaigns, "ca.csv")
summary(candidates)
summary(results_house)
summary(campaigns)
# # Basic histogram
# ggplot(results_house, aes(x = general_percent )) + geom_histogram()
#  geom_histogram(aes(y=..density..), colour="black", fill="white")+
#  geom_density(alpha=.2, fill="#FF6666")
# # Change the width of bins
# #ggplot(results_house, aes(x =  general_percent )) +
# #   geom_histogram(binwidth=1)
ggplot(results_house, aes(x= general_percent)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")
p<-ggplot(campaigns, aes(x= ttl_disb)) +
geom_histogram(color="black", fill="white")
ggplot(campaigns  , aes(x= ttl_disb)) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")
nrow(results_house)
nrow(campaigns)
d1 <- inner_join(results_house, campaigns, by = NULL)
#d1 <- merge(results_house, campaigns, by = "cand_id")
#d2 <- merge(results_house, campaigns)
nrow(d1)
#nrow(d2)
#comparison <- compare(d1,d2,allowAll=TRUE)
#comparison
#summary(d1)
#summary(d2)
ggplot(d1, aes(x=general_votes, y=ttl_disb)) + geom_point()
# Change the point size, and shape
sp <- ggplot(d1, aes(x=general_votes, y=ttl_disb  )) +
geom_smooth(method=lm)+
geom_point(size=2, shape=23)
sp
#sp + geom_density_2d()
d2<-d1 %>%
dplyr::select(cand_pty_affiliation, general_votes, ttl_disb, state) %>%
na.omit() %>%
mutate(
can_party = case_when(
cand_pty_affiliation=="REP" ~ "REP",
cand_pty_affiliation=="DEM" ~ "DEM",
TRUE ~ "Other"
)
)
d2<-d2 %>% dplyr::select(can_party, general_votes, ttl_disb, state)
write.csv(d2, "d2.csv")
head(d2)
sp <- ggplot(d2, aes(x=general_votes, y=ttl_disb, color=can_party)) +
geom_smooth(method=lm)+
geom_point(size=2, shape=23)
sp
p1<-ggplot(d2, aes(x=general_votes, y=ttl_disb, color=can_party)) +
geom_point() +
scale_color_manual(values = c("red", "blue", "green")) +
theme(legend.position=c(0,1), legend.justification=c(0,1))
p1
p2<-ggplot(d2, aes(x=general_votes, fill=can_party)) +
geom_density(alpha=.5) +
scale_fill_manual(values =  c("red", "blue", "green")) +
theme(legend.position = "none")
p2
# Marginal density plot of y (right panel)
p3<-ggplot(d2, aes(x=ttl_disb, fill=can_party)) +
geom_density(alpha=.5) +
scale_fill_manual(values =  c("red", "blue", "green")) +
theme(legend.position = "none")
p3
p3<-ggplot(d2, aes(x=can_party, fill=can_party)) +
geom_density(alpha=.5) +
scale_fill_manual(values =  c("red", "blue", "green")) +
theme(legend.position = "none")
p3
#sp + geom_density_2d()
#summary(d1)
summary(d2)
# set the 'method' option
trans <- preProcess(d2, method = c("center", "scale"))
# use predict() function to get the final result
d2 <- predict(trans, d2)
summary(t1)
#d2$disb <- log(d2$ttl_disb)
#d2$votes <- log(d2$general_votes)
write.csv(d2, "d2.csv")
#d2[which(!is.finite(d2))] <- 0
#d2 <- d2[is.finite(rowSums(d2)),]
d2[d2 == -Inf] <- 0
#data_new <- d2                                     # Duplicate data
#d2[is.na(d2$disb) | d2$disb == "Inf"] <- NA  # Replace NaN & Inf with NA
#d3 <- data_new
head(d2)
head(d2$disb)
#d3<-d3%>%na.omit()
fit <- lm(d2$general_votes ~ d2$disb)
d2$logdisb <- log(d2$ttl_disb)
d2$logvotes <- log(d2$general_votes)
d2$logparty <- log(d2$can_party)
## install.packages('fec16')
library(tidyverse)
library(magrittr)
library(ggplot2)
library(patchwork)
library(sandwich)
library(lmtest)
library(fec16)
library(scales)
library(compare)
library(dplyr)
library(gvlma)
library(caret)
library(e1071)
library(car)
library(ggpubr)
library(cowplot)
library(gridExtra)
theme_set(theme_minimal())
knitr::opts_chunk$set(dpi = 300)
candidates    <- fec16::candidates
results_house <- fec16::results_house
campaigns     <- fec16::campaigns
write.csv(candidates, "c.csv")
write.csv(results_house, "r.csv")
write.csv(campaigns, "ca.csv")
summary(candidates)
summary(results_house)
summary(campaigns)
p1<-ggplot(results_house, aes(x= general_votes)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")
p2<-ggplot(campaigns, aes(x= ttl_disb)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")
p3<-ggplot(results_house,aes(x= general_votes)) +
geom_density() +
scale_x_continuous(breaks = trans_breaks("log", function(x) 10^x), trans = scales::log_trans())+
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")+
labs(x = "log(general_votes)")
p4<-ggplot(campaigns, aes(x= ttl_disb)) +
geom_density() +
scale_x_continuous(breaks = trans_breaks("log", function(x) 10^x), trans = scales::log_trans())+
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")+
labs(x = "log(ttl_disb)")
ggarrange(p1, p2, p3, p4, labels = c("A", "B", "C", "D"), ncol = 2, nrow = 2)
d1 <- dplyr::inner_join(results_house, campaigns, by = NULL)
nrow(d1)
summary(d1)
p5 <- ggplot(d1, aes(y=general_votes, x=ttl_disb)) +
geom_point(size=2, shape=23)+
geom_smooth(method=lm)
p6 <- ggplot(d1, aes(x=log(ttl_disb), y=log(general_votes))) +
geom_point(size=2, shape=23)+
geom_smooth(method=lm)
ggarrange(p5, p6, labels = c("E", "F"), ncol = 2, nrow = 2)
d2<-d1 %>%
dplyr::select(party, general_votes, ttl_disb) %>%
na.omit() %>%
mutate(
can_party = case_when(
party=="REP" ~ "REP",
party=="DEM" ~ "DEM",
TRUE ~ "Other"
)
)
d2<-d2 %>% dplyr::select(can_party, general_votes, ttl_disb)
summary(d2)
p0 <- ggplot(d2, aes(y = general_votes, x=ttl_disb, color=can_party)) +
geom_smooth(method=lm)+
geom_point(size=2, shape=23)
p1<-ggplot(d2, aes(x=general_votes, y=ttl_disb, color=can_party)) +
geom_point() +
scale_color_manual(values = c("red", "blue", "green")) +
theme(legend.position=c(1,1), legend.justification=c(1,1))
p2<-ggplot(d2, aes(x=general_votes, fill=can_party)) +
geom_density(alpha=.5) +
scale_fill_manual(values =  c("red", "blue", "green")) +
theme(legend.position=c(1,1), legend.justification=c(1,1))
# Marginal density plot of y (right panel)
p3<-ggplot(d2, aes(x=ttl_disb, fill=can_party)) +
geom_density(alpha=.5) +
scale_fill_manual(values =  c("red", "blue", "green")) +
theme(legend.position = "none")
p4<-ggplot(d2, aes(x=can_party, fill=can_party)) +
geom_density(alpha=.5) +
scale_fill_manual(values =  c("red", "blue", "green")) +
theme(legend.position = "none")
ggarrange(p1, p2, p3, p4, labels = c("G", "H", "I", "J" ), ncol = 2, nrow =2)
d5<-d2 %>%
dplyr::select(can_party, general_votes, ttl_disb) %>%
na.omit() %>%
mutate(
can_party = case_when(
can_party=="REP" ~ 0,
can_party=="DEM" ~ 1,
TRUE ~ 2
)
)
d2<-d5 %>% dplyr::select(can_party, general_votes, ttl_disb)
d2[d2 == -Inf] <- 0
sdat <- d2[, c("general_votes", "ttl_disb", "can_party")]
imp <- preProcess(sdat, method = c("bagImpute"), k = 5)
sdat <- predict(imp, sdat)
transformed <- spatialSign(sdat)
transformed <- as.data.frame(transformed)
par(mfrow = c(1, 2), oma = c(2, 2, 2, 2))
plot(general_votes ~ ttl_disb, data = sdat, col = "blue", main = "Before")
plot(general_votes ~ ttl_disb, data = transformed, col = "blue", main = "After")
d2$novotes<-transformed$"general_votes"
d2$nodisb<-transformed$"ttl_disb"
d2$noparty<-transformed$"can_party"
#d2<-transformed
trans <- preProcess(d2, method = c("center", "scale"))
# use predict() function to get the final result
d3 <- predict(trans, d2)
d2$csvotes = d3$general_votes
d2$csdisb = d3$ttl_disb
d2$csparty = d3$can_party
d2$logdisb <- log(d2$ttl_disb)
d2$logvotes <- log(d2$general_votes)
d2$logparty <- log(d2$can_party)
d2 <- na.omit(d2)
d2[d2 == -Inf] <- 0
fit0 <- lm(d2$general_votes ~ d2$ttl_disb  + d2$can_party)
summary(fit0)
fit1 <- lm(d2$csvotes ~ d2$csdisb  + d2$csparty)
summary(fit1)
fit2 <- lm(d2$novotes ~ d2$nodisb  + d2$noparty)
summary(fit2)
fit3 <- lm(d2$logvotes ~ d2$logdisb  + d2$logparty)
summary(fit3)
fit4 <- lm(d2$general_votes ~ d2$logdisb + d2$can_party)
summary(fit4)
