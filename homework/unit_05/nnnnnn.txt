b) Write a function that simulates 100 fair coin flips and returns the number of heads. Run this simulation a bunch of times (e.g. 10,000) and compute the fraction of results between 54 and 60 (inclusive of the end points)

R code with comments

---

#b)
# a function simulate 100 flips
flip<- function() {
   #flip a coin 100 times
   s<- sample(c(0,1),size=100,replace=TRUE)
   return(sum(s))
}

#set the random seed
set.seed(123)
#run the simulation 10000 times
x<- replicate(10000,flip())
# compute the fraction of results between 54 and 60
f<-sum(x>=54 & x<=60)/10000
sprintf('the fraction of results between 54 and 60 is %.4f',f)
----

get this

ans:

the fraction of results between 54 and 60 is 0.2259

The answers for part a) and b) are close enough but do not match perfectly. The part a) result says that if we perform 100 flips many many times then 0.2241 of those 100 flips will have heads between 54 and 60. In part b) we did 100 flips, 10000 times which is a sample from all possible 100 flips. That is, we have simulated the actual process by taking a sample from the population. Hence the results will never match perfectly, but the simulation results will get close to the theoretical results as the number of simulations increase.

all code together

---

#a)
prob<-pnorm(60.5,50,5)-pnorm(53.5,50,5)
sprintf('the probability of getting between 54 and 60 heads is %.4f',prob)

#b)
# a function simulate 100 flips
flip<- function() {
   #flip a coin 100 times
   s<- sample(c(0,1),size=100,replace=TRUE)
   return(sum(s))
}

#set the random seed
set.seed(123)
#run the simulation 10000 times
x<- replicate(10000,flip())
# compute the fraction of results between 54 and 60
f<-sum(x>=54 & x<=60)/10000
sprintf('the fraction of results between 54 and 60 is %.4f',f)
----
